@model SalesWebMvc.Models.ViewModels.SellerFormViewModel
@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<h4>Seller</h4>
<hr />
@*<div class="row">
        <div class="col-md-4">
            <form asp-action="CreateSeller">
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Seller.Name" class="control-label"></label>
                    <input asp-for="Seller.Name" class="form-control" />
                    <span asp-validation-for="Seller.Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Seller.Email" class="control-label"></label>
                    <input asp-for="Seller.Email" class="form-control" />
                    <span asp-validation-for="Seller.Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Seller.BirthDate" class="control-label"></label>
                    <input asp-for="Seller.BirthDate" class="form-control" />
                    <span asp-validation-for="Seller.BirthDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Seller.BaseSalary" class="control-label"></label>
                    <input asp-for="Seller.BaseSalary" class="form-control" />
                    <span asp-validation-for="Seller.BaseSalary" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Seller.DepartmentId" class="control-label"></label>
                    <select asp-for="Seller.DepartmentId"
                            asp-items="@(new SelectList(Model.Departments, "Id", "Name"))"
                            class="form-control"></select>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-default" />
                    <a asp-action="Index">Back to List</a>
                </div>
            </form>
        </div>
    </div>*@

@using (Html.BeginForm("CreateSeller", "Sellers"))
{
    using (Html.DevExtreme().ValidationGroup())
    {
        @Html.AntiForgeryToken()

        @(Html.DevExtreme().Form<SalesWebMvc.Models.ViewModels.SellerFormViewModel>()
            .ID("form")
            .ColCount(2)
            .FormData(Model)
            .LabelLocation(FormLabelLocation.Top)
            .MinColWidth(300)
            .ReadOnly(false)
            .ShowColonAfterLabel(true)
            .Items(items => {
                items.AddSimpleFor(m => m.Seller.Name)
						.Editor(e => e
							.TextBox()
						);
                items.AddSimpleFor(m => m.Seller.Email)
                        .Editor(e => e
							.TextBox()
						);
                items.AddSimpleFor(m => m.Seller.BirthDate)
				        .Editor(e => e
                            .DateBox()
                            .Width("100%")
                        );
                items.AddSimpleFor(m => m.Seller.BaseSalary)
                        .Editor(e => e
                            .TextBox()
                        );
                items.AddSimpleFor(m => m.Seller.DepartmentId)                                
                        .Editor(e => e
						    .SelectBox()
						    .DataSource(Model.Departments)
							    .DisplayExpr("Name")
							    .ValueExpr("Id")
							    .Value("")
						    )
					    .ValidationRules(r => r
						    .AddRequired()
						    .Message("Department is required.")
                );
                items.AddEmpty();
                items.AddButton()
                        .HorizontalAlignment(HorizontalAlignment.Left)
                        .ButtonOptions(b => b
                            .Text("Add")
                            .Type(ButtonType.Normal)
                            .StylingMode(ButtonStylingMode.Contained)
                            .Width(100)
                            .UseSubmitBehavior(true)
                        );
            })
        )
    }
}


@section Scripts {

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

}